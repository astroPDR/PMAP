
# This is a sample configuration file for the PMAP pipeline.
# Please, consult the manual for more information about the options presented here.
# This file follows Python's ConfigParser format. Consult
# http://docs.python.org/2/library/configparser.html for more information.
# Notice that the options in this configuration file are case-sensitive.

[Images]

# Path of the FUV image [required]
fuvImage =

# Path of the HI image [required]
hiImage =

# To convert input map from CPS to flux units [required]
FUVscale =

# To convert input map into column density cm-2 [required]
HIscale =

# The pixel scale, in arcsec, of the FUV image.
# If None, it will calculated from the image.
FUV_Pix_Scale = None

# The pixel scale, in arcsec, of the FUV image.
# If None, it will calculated from the image.
HI_Pix_Scale = None


[Logging options]

# The output directory where output files will be created [required]
outputDir = ./

# The root for the filenames of the output files [required]
# If Default, it will use the basename of this configuration file
# If not modified, the remaining filenames in this section will be
# filled up using this root
root = Default

# Should we create an output log? [required]
log = True

# The output file where the info will be saved [required]
logFile = %(root)s.log

# UV flux measurements stored here [required]
data_uv = %(root)s_Patchtest_UVdata.csv

# Filename of HI patch measurements [required]
data_hi = %(root)s_Patches_HI.csv

# Filename to save the results before filtering [required]
data_results_unfiltered = %(root)s_Resulst_NoFilter.csv

# Saves unfiltered results in VOTable format (True|False) [required]
save_unfiltered_vot = True

# Filename with the PDR method results after filtering [required]
data_results = %(root)s_Results.csv

# Saves results in VOTable format (True|False) [required]
save_results_vot = True


[Physical properties]

# Distance in Mpc [required]
distance =

# Extinction (mag) [required]
ext =

# Position angle (degrees) [required]
pa =

# Inclination (degrees) [required]
incl =

# Galaxy center RA [XXhYYmZZ.ZZss or float in degrees] [required]
c_RA =

# Galaxy center Dec [XXdYYmZZ.ZZss or float in degrees] [required]
c_DEC =

# R_25 (kpc) [required]
R25 =


[FUV]

# The name of the mask file produced by CLFind
# Use Default for a name based on the FUV image
# filename [required]
fuvMaskFile = Default

# Makes the program prompt for the necessary
# values. Overrides the remaining options in this
# section. [required]
fuvInteractive = False

# The background level of the image.
# Leave blank or None for an automatic estimation. [required]
fuvBackground = None

# Number of times the background level needed for
# a pixel to be considered emission [required]
fuvSigma = 5

# Highest level. Leave blank for an automatic
# estimation. [optional]
fuvhLevel =

# Number of levels computed. Leave blank for an
# automatic estimation. [optional]
fuvnLevels =

# Minimum number of pixels for a regions to be
# accepted [required]
fuvMinPixels = 20

# Checks the FUV mask to reject invalid regions [required]
checkFUV = True


[FUV Rejection] # This section is superfluous if checkFUV=False.

# The minimum distance (in parsecs) between
# regions. If two peaks are closer than this
# distance they will be tested. [required]
minDistance = 500

# If True, when two regions are adjacent, the
# weakest region will be appended instead of
# removed. [required]
joinRegions = False

# If False, no tests based on the flux will be
# carried out. If True, the correction will
# always be applied. If numeric value, the
# correction will be applied only if
# flux(region1)/flux(region2) <= value
# [required]
fluxContrast = True

# Idem for the peak value [required]
peakContrast = True

# If True, the close but not adjacent regions
# are always removed regardless fluxContrast or
# peakContrast [required]
alwaysRemoveClose = True

# The name of the new mask after the FUV rejection [required]
fuvMaskFileRej = Default


[FUV Fluxes]

# FUV flux local minimum threshold wrt initial ring average [required]
contrast = 0.5

# Subpixel fraction for flux measurement (1/fraction subpixels) [required]
subpix = 0.1

# Maximum aperture for flux measurement in arcsec [required]
maxrad = 60

# Estimated relative flux error [required]
fluxerror = 0.3

# Improves the flux measurement [required]
refineFlux = True

# The factor the grid will be refined to measure the flux [required]
refineFactor = 10


[HI]

# The width (in parsecs) of the HI region around
# the FUV peak [required]
HIRegSize = 1000

# Creates a mosaic with all the HI regions [required]
createHIMosaic = True

# The background level of the image.
# Blank or None for an automatic estimation. [required]
hiBackground = None


[PDR method]

# This section contains hardcoded values for certain aspects of
# the PDR method. Change only if you know what you are doing.

# Error in rho [in pixels]. Default: half a pixel [required]
srho_error: 0.5

# Absolute error for sdd0 when it can not be determined [required]
sdd0_hardcoded = 0.1

# Plausibility cut-off. All regions at a distance from the UV source
# larger than this will be rejected in data_results (they are still
# saved in data_results_unfiltered). In parsecs. [required]
rho_cutoff = 500

# UV contrast cut-off [required]
uvContrast_cutOff = 1.

# dd0 cut-off [required]
dd0_cutOff = 0.001


[Dust-to-gas ratio]
# Uncomment the appropriate options depending on the dusttype measurement.

dusttype = slope
# Power law slope
slope =
# Power law axis intercept
offset =
# Relative error (NB: absolute error in 'map')
slopeerror = 0.01

# dusttype = map
# Filename of dust map containing 12+log(O/H)
mapname =
# Map with corresponding errors
maperror =
# 12+log(O/H) solar value (for map conversion)
solar = 8.69

# dusttype = const
# DTG constant value
dustval =
# Relative error
dusterr = 0.1
